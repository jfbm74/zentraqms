name: 🔍 Pull Request Validation

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [ main, develop ]

# Cancelar workflows anteriores del mismo PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  # ===============================================
  # 📋 PR Information
  # ===============================================
  pr-info:
    name: 📋 PR Information
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    outputs:
      changed-frontend: ${{ steps.changes.outputs.frontend }}
      changed-backend: ${{ steps.changes.outputs.backend }}
      changed-docs: ${{ steps.changes.outputs.docs }}
      
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Detect changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            frontend:
              - 'frontend/**'
              - 'package*.json'
            backend:
              - 'backend/**'
              - 'requirements/**'
              - '*.py'
            docs:
              - 'docs/**'
              - '*.md'

      - name: 📊 PR Summary
        uses: actions/github-script@v7
        with:
          script: |
            const { context } = require('@actions/github');
            const changes = {
              frontend: '${{ steps.changes.outputs.frontend }}' === 'true',
              backend: '${{ steps.changes.outputs.backend }}' === 'true',
              docs: '${{ steps.changes.outputs.docs }}' === 'true'
            };
            
            let summary = '## 🔍 PR Analysis\n\n';
            summary += '### Changed Components:\n';
            summary += `- Frontend: ${changes.frontend ? '✅' : '❌'}\n`;
            summary += `- Backend: ${changes.backend ? '✅' : '❌'}\n`;
            summary += `- Documentation: ${changes.docs ? '✅' : '❌'}\n\n`;
            
            summary += '### Required Checks:\n';
            if (changes.frontend) summary += '- 🎨 Frontend tests and linting\n';
            if (changes.backend) summary += '- 🔧 Backend tests and linting\n';
            if (changes.frontend && changes.backend) summary += '- 🔗 Integration tests\n';
            
            // Crear o actualizar comentario
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('## 🔍 PR Analysis')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: summary
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: summary
              });
            }

  # ===============================================
  # 🎨 Frontend Validation (conditional)
  # ===============================================
  frontend-validation:
    name: 🎨 Frontend Validation
    runs-on: ubuntu-latest
    needs: pr-info
    if: needs.pr-info.outputs.changed-frontend == 'true'
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Lint check
        run: |
          npm run lint 2>&1 | tee lint-results.txt
          echo "LINT_EXIT_CODE=${PIPESTATUS[0]}" >> $GITHUB_ENV

      - name: 🎯 Type check
        run: npx tsc --noEmit

      - name: 🧪 Run tests with coverage
        run: npm run test:coverage

      - name: 📊 Coverage report
        run: |
          echo "## 📊 Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat coverage/lcov-report/index.html | grep -o 'Functions.*[0-9.]*%' || echo "Coverage report generated" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: 🏗️ Build check
        run: npm run build

      - name: ✅ Frontend validation passed
        run: echo "🎉 Frontend validation completed successfully!"

  # ===============================================
  # 🔧 Backend Validation (conditional)
  # ===============================================
  backend-validation:
    name: 🔧 Backend Validation
    runs-on: ubuntu-latest
    needs: pr-info
    if: needs.pr-info.outputs.changed-backend == 'true'
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/testing.txt

      - name: 🔍 Lint with flake8
        run: |
          flake8 . --count --statistics --tee --output-file=flake8-report.txt

      - name: 🎯 Format check with black
        run: black --check --diff .

      - name: 🔒 Security check with bandit
        run: bandit -r . -x tests/ || true

      - name: 🗄️ Migration check
        run: python manage.py makemigrations --check --dry-run
        env:
          DJANGO_SETTINGS_MODULE: config.settings.testing
          DATABASE_URL: postgres://test_user:test_pass@localhost:5432/test_db

      - name: 🧪 Run tests
        run: |
          coverage run --source='.' manage.py test
          coverage report --show-missing
          coverage html
        env:
          DJANGO_SETTINGS_MODULE: config.settings.testing
          DATABASE_URL: postgres://test_user:test_pass@localhost:5432/test_db

      - name: ✅ Backend validation passed
        run: echo "🎉 Backend validation completed successfully!"

  # ===============================================
  # 📝 Documentation Check
  # ===============================================
  docs-validation:
    name: 📝 Documentation Check
    runs-on: ubuntu-latest
    needs: pr-info
    if: needs.pr-info.outputs.changed-docs == 'true'
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔍 Check markdown links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          use-verbose-mode: 'yes'

      - name: 📝 Spell check
        uses: streetsidesoftware/cspell-action@v6
        with:
          files: '**/*.md'
          incremental_files_only: true

  # ===============================================
  # 🎯 Final Validation
  # ===============================================
  pr-validation-summary:
    name: 🎯 PR Validation Summary
    runs-on: ubuntu-latest
    needs: [pr-info, frontend-validation, backend-validation, docs-validation]
    if: always() && github.event.pull_request.draft == false
    
    steps:
      - name: 📊 Check all validations
        run: |
          echo "=== PR VALIDATION SUMMARY ==="
          
          # Frontend
          if [[ "${{ needs.pr-info.outputs.changed-frontend }}" == "true" ]]; then
            if [[ "${{ needs.frontend-validation.result }}" == "success" ]]; then
              echo "✅ Frontend validation: PASSED"
            else
              echo "❌ Frontend validation: FAILED"
              exit 1
            fi
          else
            echo "⏭️ Frontend validation: SKIPPED (no changes)"
          fi
          
          # Backend  
          if [[ "${{ needs.pr-info.outputs.changed-backend }}" == "true" ]]; then
            if [[ "${{ needs.backend-validation.result }}" == "success" ]]; then
              echo "✅ Backend validation: PASSED"
            else
              echo "❌ Backend validation: FAILED"
              exit 1
            fi
          else
            echo "⏭️ Backend validation: SKIPPED (no changes)"
          fi
          
          # Documentation
          if [[ "${{ needs.pr-info.outputs.changed-docs }}" == "true" ]]; then
            if [[ "${{ needs.docs-validation.result }}" == "success" ]]; then
              echo "✅ Documentation validation: PASSED"
            else
              echo "❌ Documentation validation: FAILED"
              exit 1
            fi
          else
            echo "⏭️ Documentation validation: SKIPPED (no changes)"
          fi
          
          echo "🎉 All required validations PASSED!"

      - name: 💬 Update PR status
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const { context } = require('@actions/github');
            const conclusion = '${{ job.status }}' === 'success' ? 'success' : 'failure';
            const emoji = conclusion === 'success' ? '🎉' : '❌';
            const message = conclusion === 'success' 
              ? 'All validations passed! Ready for review.' 
              : 'Some validations failed. Please fix the issues.';
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `${emoji} **PR Validation ${conclusion.toUpperCase()}**\n\n${message}`
            });