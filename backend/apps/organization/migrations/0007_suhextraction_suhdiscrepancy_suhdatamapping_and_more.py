# Generated by Django 5.0 on 2025-08-15 03:15

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("organization", "0006_add_health_models"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SUHExtraction",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated.",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the record.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when the record was soft deleted.",
                        null=True,
                        verbose_name="deleted at",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this record should be treated as active.",
                        verbose_name="active",
                    ),
                ),
                (
                    "extraction_id",
                    models.CharField(
                        help_text="Identificador único de la extracción",
                        max_length=100,
                        unique=True,
                        verbose_name="ID de Extracción",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("in_progress", "En Progreso"),
                            ("completed", "Completada"),
                            ("failed", "Fallida"),
                            ("partial", "Parcial"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("SUH_PORTAL", "Portal SUH MinSalud"),
                            ("MANUAL_ENTRY", "Entrada Manual"),
                            ("API_IMPORT", "Importación API"),
                        ],
                        default="SUH_PORTAL",
                        max_length=20,
                        verbose_name="Fuente",
                    ),
                ),
                (
                    "nit_consulta",
                    models.CharField(
                        help_text="NIT usado para la consulta en el portal SUH",
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator("^\\d{9,11}$")
                        ],
                        verbose_name="NIT de Consulta",
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Iniciado"),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Completado"
                    ),
                ),
                (
                    "extracted_data",
                    models.JSONField(
                        default=dict,
                        help_text="Datos completos extraídos del portal SUH en formato JSON",
                        verbose_name="Datos Extraídos",
                    ),
                ),
                (
                    "validation_results",
                    models.JSONField(
                        default=dict,
                        help_text="Resultados de validación y discrepancias detectadas",
                        verbose_name="Resultados de Validación",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True,
                        help_text="Descripción del error si la extracción falló",
                        verbose_name="Mensaje de Error",
                    ),
                ),
                (
                    "extraction_logs",
                    models.JSONField(
                        default=list,
                        help_text="Logs detallados del proceso de extracción",
                        verbose_name="Logs de Extracción",
                    ),
                ),
                (
                    "total_sedes_extracted",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Sedes Extraídas"
                    ),
                ),
                (
                    "total_servicios_extracted",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Servicios Extraídos"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who soft deleted this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="suh_extractions",
                        to="organization.organization",
                        verbose_name="Organización",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last updated this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Extracción SUH",
                "verbose_name_plural": "Extracciones SUH",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="SUHDiscrepancy",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated.",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the record.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when the record was soft deleted.",
                        null=True,
                        verbose_name="deleted at",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this record should be treated as active.",
                        verbose_name="active",
                    ),
                ),
                (
                    "field_name",
                    models.CharField(
                        help_text="Nombre del campo con discrepancia",
                        max_length=100,
                        verbose_name="Campo",
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("CRITICAL", "Crítica"),
                            ("IMPORTANT", "Importante"),
                            ("MINOR", "Menor"),
                        ],
                        max_length=20,
                        verbose_name="Nivel de Criticidad",
                    ),
                ),
                (
                    "suh_value",
                    models.TextField(
                        help_text="Valor del portal SUH", verbose_name="Valor SUH"
                    ),
                ),
                (
                    "qms_value",
                    models.TextField(
                        help_text="Valor actual en QMS", verbose_name="Valor QMS"
                    ),
                ),
                (
                    "resolution_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("suh_accepted", "SUH Aceptado"),
                            ("qms_kept", "QMS Mantenido"),
                            ("manual_resolved", "Resuelto Manualmente"),
                            ("ignored", "Ignorado"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Estado de Resolución",
                    ),
                ),
                (
                    "final_value",
                    models.TextField(
                        blank=True,
                        help_text="Valor final después de resolución",
                        verbose_name="Valor Final",
                    ),
                ),
                (
                    "resolution_notes",
                    models.TextField(
                        blank=True,
                        help_text="Justificación para la resolución",
                        verbose_name="Notas de Resolución",
                    ),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Resuelto el"
                    ),
                ),
                (
                    "regulatory_impact",
                    models.TextField(
                        blank=True,
                        help_text="Descripción del impacto regulatorio de la discrepancia",
                        verbose_name="Impacto Regulatorio",
                    ),
                ),
                (
                    "auto_resolution_suggested",
                    models.BooleanField(
                        default=False, verbose_name="Resolución Automática Sugerida"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who soft deleted this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Resuelto por",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last updated this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
                (
                    "extraction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="discrepancies",
                        to="organization.suhextraction",
                        verbose_name="Extracción SUH",
                    ),
                ),
            ],
            options={
                "verbose_name": "Discrepancia SUH",
                "verbose_name_plural": "Discrepancias SUH",
                "ordering": ["level", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SUHDataMapping",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated.",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the record.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when the record was soft deleted.",
                        null=True,
                        verbose_name="deleted at",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this record should be treated as active.",
                        verbose_name="active",
                    ),
                ),
                (
                    "suh_field_name",
                    models.CharField(
                        help_text="Nombre del campo en el portal SUH",
                        max_length=100,
                        verbose_name="Campo SUH",
                    ),
                ),
                (
                    "qms_field_name",
                    models.CharField(
                        help_text="Nombre del campo correspondiente en QMS",
                        max_length=100,
                        verbose_name="Campo QMS",
                    ),
                ),
                (
                    "field_type",
                    models.CharField(
                        choices=[
                            ("string", "Texto"),
                            ("integer", "Número Entero"),
                            ("decimal", "Número Decimal"),
                            ("date", "Fecha"),
                            ("boolean", "Booleano"),
                            ("json", "JSON"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Campo",
                    ),
                ),
                (
                    "suh_value",
                    models.TextField(
                        blank=True,
                        help_text="Valor extraído del portal SUH",
                        verbose_name="Valor SUH",
                    ),
                ),
                (
                    "qms_value",
                    models.TextField(
                        blank=True,
                        help_text="Valor transformado para QMS",
                        verbose_name="Valor QMS",
                    ),
                ),
                (
                    "is_valid",
                    models.BooleanField(default=True, verbose_name="Es Válido"),
                ),
                (
                    "validation_notes",
                    models.TextField(blank=True, verbose_name="Notas de Validación"),
                ),
                (
                    "transformation_rule",
                    models.JSONField(
                        default=dict,
                        help_text="Reglas para transformar el valor de SUH a QMS",
                        verbose_name="Regla de Transformación",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who soft deleted this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last updated this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
                (
                    "extraction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data_mappings",
                        to="organization.suhextraction",
                        verbose_name="Extracción SUH",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mapeo de Datos SUH",
                "verbose_name_plural": "Mapeos de Datos SUH",
            },
        ),
        migrations.CreateModel(
            name="SUHSyncSchedule",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated.",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the record.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when the record was soft deleted.",
                        null=True,
                        verbose_name="deleted at",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("daily", "Diario"),
                            ("weekly", "Semanal"),
                            ("monthly", "Mensual"),
                            ("quarterly", "Trimestral"),
                            ("manual", "Manual"),
                        ],
                        default="monthly",
                        max_length=20,
                        verbose_name="Frecuencia",
                    ),
                ),
                (
                    "next_sync_date",
                    models.DateTimeField(verbose_name="Próxima Sincronización"),
                ),
                (
                    "last_sync_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Última Sincronización"
                    ),
                ),
                (
                    "auto_resolve_minor",
                    models.BooleanField(
                        default=False,
                        help_text="Resolver automáticamente discrepancias de nivel menor",
                        verbose_name="Auto-resolver Discrepancias Menores",
                    ),
                ),
                (
                    "notify_on_discrepancies",
                    models.BooleanField(
                        default=True,
                        help_text="Enviar notificaciones cuando se detecten discrepancias",
                        verbose_name="Notificar Discrepancias",
                    ),
                ),
                (
                    "notification_emails",
                    models.JSONField(
                        default=list,
                        help_text="Lista de emails para notificaciones de sincronización",
                        verbose_name="Emails de Notificación",
                    ),
                ),
                (
                    "total_syncs_completed",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Sincronizaciones Completadas"
                    ),
                ),
                (
                    "total_discrepancies_found",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Discrepancias Encontradas"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who soft deleted this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "organization",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="suh_sync_schedule",
                        to="organization.organization",
                        verbose_name="Organización",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last updated this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Programación Sincronización SUH",
                "verbose_name_plural": "Programaciones Sincronización SUH",
            },
        ),
        migrations.AddIndex(
            model_name="suhextraction",
            index=models.Index(
                fields=["organization", "status"], name="organizatio_organiz_2f4f2c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="suhextraction",
            index=models.Index(
                fields=["nit_consulta"], name="organizatio_nit_con_b5e666_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="suhextraction",
            index=models.Index(
                fields=["started_at"], name="organizatio_started_aeb26d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="suhdiscrepancy",
            index=models.Index(
                fields=["extraction", "resolution_status"],
                name="organizatio_extract_a65cd2_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="suhdiscrepancy",
            index=models.Index(
                fields=["level", "resolution_status"],
                name="organizatio_level_7a3c54_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="suhdatamapping",
            index=models.Index(
                fields=["extraction", "is_valid"], name="organizatio_extract_f285dc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="suhdatamapping",
            index=models.Index(
                fields=["suh_field_name"], name="organizatio_suh_fie_769423_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="suhdatamapping",
            unique_together={("extraction", "suh_field_name", "qms_field_name")},
        ),
        migrations.AddIndex(
            model_name="suhsyncschedule",
            index=models.Index(
                fields=["is_active", "next_sync_date"],
                name="organizatio_is_acti_a72dff_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="suhsyncschedule",
            index=models.Index(
                fields=["organization"], name="organizatio_organiz_198fa8_idx"
            ),
        ),
    ]
