# Generated by Django 5.0 on 2025-08-13 19:21

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated.",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the record.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "razon_social",
                    models.CharField(
                        help_text="Razón social completa de la organización según documentos legales.",
                        max_length=200,
                        verbose_name="razón social",
                    ),
                ),
                (
                    "nombre_comercial",
                    models.CharField(
                        blank=True,
                        help_text="Nombre comercial o marca bajo la cual opera la organización.",
                        max_length=100,
                        verbose_name="nombre comercial",
                    ),
                ),
                (
                    "nit",
                    models.CharField(
                        help_text="Número de Identificación Tributaria sin dígito de verificación.",
                        max_length=15,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="NIT debe tener formato válido: 123456789-0 o 1234567890",
                                regex="^\\d{9,10}-?\\d?$",
                            )
                        ],
                        verbose_name="NIT",
                    ),
                ),
                (
                    "digito_verificacion",
                    models.CharField(
                        help_text="Dígito de verificación del NIT.",
                        max_length=1,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Dígito de verificación debe ser un número del 0 al 9",
                                regex="^[0-9]$",
                            )
                        ],
                        verbose_name="dígito de verificación",
                    ),
                ),
                (
                    "tipo_organizacion",
                    models.CharField(
                        choices=[
                            ("empresa_privada", "Empresa Privada"),
                            ("empresa_publica", "Empresa Pública"),
                            ("mixta", "Mixta"),
                            ("fundacion", "Fundación"),
                            ("ong", "ONG"),
                            ("cooperativa", "Cooperativa"),
                            ("ips", "IPS"),
                            ("eps", "EPS"),
                            ("hospital", "Hospital"),
                            ("clinica", "Clínica"),
                            ("centro_medico", "Centro Médico"),
                            ("laboratorio", "Laboratorio"),
                            ("institucion_educativa", "Institución Educativa"),
                            ("universidad", "Universidad"),
                            ("otra", "Otra"),
                        ],
                        help_text="Tipo de organización según su naturaleza jurídica.",
                        max_length=30,
                        verbose_name="tipo de organización",
                    ),
                ),
                (
                    "sector_economico",
                    models.CharField(
                        choices=[
                            ("salud", "Salud"),
                            ("educacion", "Educación"),
                            ("manufactura", "Manufactura"),
                            ("servicios", "Servicios"),
                            ("tecnologia", "Tecnología"),
                            ("financiero", "Financiero"),
                            ("comercio", "Comercio"),
                            ("construccion", "Construcción"),
                            ("transporte", "Transporte"),
                            ("agropecuario", "Agropecuario"),
                            ("mineria", "Minería"),
                            ("energia", "Energía"),
                            ("telecomunicaciones", "Telecomunicaciones"),
                            ("turismo", "Turismo"),
                            ("otro", "Otro"),
                        ],
                        help_text="Sector económico principal al que pertenece la organización.",
                        max_length=30,
                        verbose_name="sector económico",
                    ),
                ),
                (
                    "tamaño_empresa",
                    models.CharField(
                        choices=[
                            ("microempresa", "Microempresa (1-10 empleados)"),
                            ("pequeña", "Pequeña Empresa (11-50 empleados)"),
                            ("mediana", "Mediana Empresa (51-200 empleados)"),
                            ("grande", "Gran Empresa (200+ empleados)"),
                        ],
                        help_text="Clasificación por tamaño según número de empleados.",
                        max_length=15,
                        verbose_name="tamaño de empresa",
                    ),
                ),
                (
                    "fecha_fundacion",
                    models.DateField(
                        blank=True,
                        help_text="Fecha de fundación o constitución de la organización.",
                        null=True,
                        verbose_name="fecha de fundación",
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        help_text="Logo oficial de la organización.",
                        null=True,
                        upload_to="organization/logos/",
                        verbose_name="logo",
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(
                        blank=True,
                        help_text="Descripción general de la organización y sus actividades.",
                        max_length=1000,
                        verbose_name="descripción",
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True,
                        help_text="Sitio web oficial de la organización.",
                        verbose_name="sitio web",
                    ),
                ),
                (
                    "email_contacto",
                    models.EmailField(
                        blank=True,
                        help_text="Email principal de contacto de la organización.",
                        max_length=254,
                        verbose_name="email de contacto",
                    ),
                ),
                (
                    "telefono_principal",
                    models.CharField(
                        blank=True,
                        help_text="Teléfono principal de contacto.",
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Número de teléfono debe tener un formato válido.",
                                regex="^\\+?[\\d\\s\\-\\(\\)]{7,15}$",
                            )
                        ],
                        verbose_name="teléfono principal",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last updated this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "organización",
                "verbose_name_plural": "organizaciones",
                "ordering": ["razon_social"],
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated.",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the record.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        help_text="Nombre identificativo de la sede.",
                        max_length=100,
                        verbose_name="nombre de la sede",
                    ),
                ),
                (
                    "tipo_sede",
                    models.CharField(
                        choices=[
                            ("principal", "Sede Principal"),
                            ("sucursal", "Sucursal"),
                            ("oficina", "Oficina"),
                            ("bodega", "Bodega"),
                            ("centro_operativo", "Centro Operativo"),
                            ("planta", "Planta"),
                            ("laboratorio", "Laboratorio"),
                            ("punto_atencion", "Punto de Atención"),
                            ("otro", "Otro"),
                        ],
                        help_text="Tipo de sede según su función.",
                        max_length=20,
                        verbose_name="tipo de sede",
                    ),
                ),
                (
                    "es_principal",
                    models.BooleanField(
                        default=False,
                        help_text="Indica si esta es la sede principal de la organización.",
                        verbose_name="es sede principal",
                    ),
                ),
                (
                    "direccion",
                    models.CharField(
                        help_text="Dirección completa de la sede.",
                        max_length=200,
                        verbose_name="dirección",
                    ),
                ),
                (
                    "ciudad",
                    models.CharField(
                        help_text="Ciudad donde se encuentra la sede.",
                        max_length=50,
                        verbose_name="ciudad",
                    ),
                ),
                (
                    "departamento",
                    models.CharField(
                        help_text="Departamento donde se encuentra la sede.",
                        max_length=50,
                        verbose_name="departamento",
                    ),
                ),
                (
                    "pais",
                    models.CharField(
                        default="Colombia",
                        help_text="País donde se encuentra la sede.",
                        max_length=50,
                        verbose_name="país",
                    ),
                ),
                (
                    "codigo_postal",
                    models.CharField(
                        blank=True,
                        help_text="Código postal de la dirección.",
                        max_length=10,
                        verbose_name="código postal",
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True,
                        help_text="Teléfono de contacto de la sede.",
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Número de teléfono debe tener un formato válido.",
                                regex="^\\+?[\\d\\s\\-\\(\\)]{7,15}$",
                            )
                        ],
                        verbose_name="teléfono",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Email de contacto de la sede.",
                        max_length=254,
                        verbose_name="email",
                    ),
                ),
                (
                    "area_m2",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Área total de la sede en metros cuadrados.",
                        max_digits=10,
                        null=True,
                        verbose_name="área en m²",
                    ),
                ),
                (
                    "capacidad_personas",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Capacidad máxima de personas en la sede.",
                        null=True,
                        verbose_name="capacidad de personas",
                    ),
                ),
                (
                    "fecha_apertura",
                    models.DateField(
                        blank=True,
                        help_text="Fecha de apertura o inicio de operaciones de la sede.",
                        null=True,
                        verbose_name="fecha de apertura",
                    ),
                ),
                (
                    "horario_atencion",
                    models.CharField(
                        blank=True,
                        help_text="Horario de atención al público (ej: Lunes a Viernes 8:00-17:00).",
                        max_length=100,
                        verbose_name="horario de atención",
                    ),
                ),
                (
                    "responsable_nombre",
                    models.CharField(
                        blank=True,
                        help_text="Nombre completo del responsable de la sede.",
                        max_length=100,
                        verbose_name="nombre del responsable",
                    ),
                ),
                (
                    "responsable_cargo",
                    models.CharField(
                        blank=True,
                        help_text="Cargo o posición del responsable de la sede.",
                        max_length=100,
                        verbose_name="cargo del responsable",
                    ),
                ),
                (
                    "responsable_telefono",
                    models.CharField(
                        blank=True,
                        help_text="Teléfono directo del responsable de la sede.",
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Número de teléfono debe tener un formato válido.",
                                regex="^\\+?[\\d\\s\\-\\(\\)]{7,15}$",
                            )
                        ],
                        verbose_name="teléfono del responsable",
                    ),
                ),
                (
                    "responsable_email",
                    models.EmailField(
                        blank=True,
                        help_text="Email del responsable de la sede.",
                        max_length=254,
                        verbose_name="email del responsable",
                    ),
                ),
                (
                    "observaciones",
                    models.TextField(
                        blank=True,
                        help_text="Observaciones adicionales sobre la sede.",
                        max_length=500,
                        verbose_name="observaciones",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last updated this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organización a la que pertenece esta sede.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="locations",
                        to="organization.organization",
                        verbose_name="organización",
                    ),
                ),
            ],
            options={
                "verbose_name": "sede",
                "verbose_name_plural": "sedes",
                "ordering": ["-es_principal", "nombre"],
            },
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(fields=["nit"], name="organizatio_nit_408600_idx"),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["tipo_organizacion"], name="organizatio_tipo_or_e32988_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["sector_economico"], name="organizatio_sector__a8bd71_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="location",
            index=models.Index(
                fields=["organization", "es_principal"],
                name="organizatio_organiz_195553_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="location",
            index=models.Index(fields=["ciudad"], name="organizatio_ciudad_3ff29c_idx"),
        ),
        migrations.AddIndex(
            model_name="location",
            index=models.Index(
                fields=["tipo_sede"], name="organizatio_tipo_se_06f9db_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="location",
            constraint=models.UniqueConstraint(
                condition=models.Q(("es_principal", True)),
                fields=("organization",),
                name="unique_main_location_per_organization",
            ),
        ),
    ]
