# Generated by Django 5.0 on 2025-08-13 19:34

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("organization", "0002_location_deleted_at_location_deleted_by_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SectorTemplate",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated.",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the record.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when the record was soft deleted.",
                        null=True,
                        verbose_name="deleted at",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this record should be treated as active.",
                        verbose_name="active",
                    ),
                ),
                (
                    "sector",
                    models.CharField(
                        choices=[
                            ("salud", "Salud"),
                            ("educacion", "Educación"),
                            ("manufactura", "Manufactura"),
                            ("servicios", "Servicios"),
                            ("tecnologia", "Tecnología"),
                            ("financiero", "Financiero"),
                            ("comercio", "Comercio"),
                            ("construccion", "Construcción"),
                            ("transporte", "Transporte"),
                            ("agropecuario", "Agropecuario"),
                            ("mineria", "Minería"),
                            ("energia", "Energía"),
                            ("telecomunicaciones", "Telecomunicaciones"),
                            ("turismo", "Turismo"),
                            ("otro", "Otro"),
                        ],
                        help_text="Sector económico al que aplica este template.",
                        max_length=30,
                        verbose_name="sector económico",
                    ),
                ),
                (
                    "nombre_template",
                    models.CharField(
                        help_text="Nombre descriptivo del template de configuración.",
                        max_length=100,
                        verbose_name="nombre del template",
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(
                        help_text="Descripción detallada del template y sus características.",
                        max_length=500,
                        verbose_name="descripción",
                    ),
                ),
                (
                    "data_json",
                    models.JSONField(
                        default=dict,
                        help_text="Configuración predefinida en formato JSON para aplicar a la organización.",
                        verbose_name="configuración JSON",
                    ),
                ),
                (
                    "version",
                    models.CharField(
                        default="1.0",
                        help_text="Versión del template para control de cambios.",
                        max_length=10,
                        verbose_name="versión",
                    ),
                ),
                (
                    "aplicaciones_exitosas",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Número de veces que este template se ha aplicado exitosamente.",
                        verbose_name="aplicaciones exitosas",
                    ),
                ),
                (
                    "fecha_ultima_aplicacion",
                    models.DateTimeField(
                        blank=True,
                        help_text="Fecha y hora de la última aplicación exitosa del template.",
                        null=True,
                        verbose_name="fecha última aplicación",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who soft deleted this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="deleted by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last updated this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "template de sector",
                "verbose_name_plural": "templates de sector",
                "ordering": ["sector", "nombre_template"],
                "indexes": [
                    models.Index(
                        fields=["sector", "is_active"],
                        name="organizatio_sector_b6e38c_idx",
                    ),
                    models.Index(
                        fields=["version"], name="organizatio_version_3dde00_idx"
                    ),
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="sectortemplate",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted_at__isnull", True), ("is_active", True)),
                fields=("sector", "nombre_template", "version"),
                name="unique_active_template_per_sector_version",
            ),
        ),
    ]
