# Generated by Django 5.0 on 2025-08-17 05:30

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("organization", "0009_healthorganization_alertas_activas_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AuditProgram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Código único del programa de auditoría",
                        max_length=50,
                        unique=True,
                        verbose_name="Código del Programa",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nombre descriptivo del programa de auditoría",
                        max_length=200,
                        verbose_name="Nombre del Programa",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Descripción detallada del programa, objetivos y metodología",
                        verbose_name="Descripción",
                    ),
                ),
                (
                    "program_type",
                    models.CharField(
                        choices=[
                            ("INTERNAL", "Auditoría Interna"),
                            ("EXTERNAL", "Auditoría Externa"),
                            ("SELF_ASSESSMENT", "Autoevaluación"),
                            ("PEER_REVIEW", "Evaluación entre Pares"),
                            ("REGULATORY", "Auditoría Regulatoria"),
                            ("ACCREDITATION", "Auditoría de Acreditación"),
                        ],
                        help_text="Tipo de programa de auditoría",
                        max_length=20,
                        verbose_name="Tipo de Programa",
                    ),
                ),
                (
                    "scope",
                    models.CharField(
                        choices=[
                            ("ORGANIZATION", "Toda la Organización"),
                            ("HEADQUARTERS", "Sede Específica"),
                            ("SERVICE", "Servicio Específico"),
                            ("PROCESS", "Proceso Específico"),
                            ("DEPARTMENT", "Departamento Específico"),
                        ],
                        help_text="Alcance de aplicación del programa",
                        max_length=20,
                        verbose_name="Alcance",
                    ),
                ),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("WEEKLY", "Semanal"),
                            ("MONTHLY", "Mensual"),
                            ("QUARTERLY", "Trimestral"),
                            ("SEMIANNUAL", "Semestral"),
                            ("ANNUAL", "Anual"),
                            ("BIENNIAL", "Bianual"),
                            ("ON_DEMAND", "Bajo Demanda"),
                        ],
                        help_text="Frecuencia de ejecución del programa",
                        max_length=20,
                        verbose_name="Frecuencia",
                    ),
                ),
                (
                    "duration_days",
                    models.PositiveIntegerField(
                        default=30,
                        help_text="Duración típica del programa en días",
                        verbose_name="Duración en Días",
                    ),
                ),
                (
                    "methodology",
                    models.JSONField(
                        default=dict,
                        help_text="Metodología detallada del programa de auditoría",
                        verbose_name="Metodología",
                    ),
                ),
                (
                    "audit_criteria",
                    models.JSONField(
                        default=list,
                        help_text="Lista de criterios específicos a evaluar",
                        verbose_name="Criterios de Auditoría",
                    ),
                ),
                (
                    "sampling_method",
                    models.CharField(
                        default="RANDOM",
                        help_text="Método de selección de muestras para auditoría",
                        max_length=100,
                        verbose_name="Método de Muestreo",
                    ),
                ),
                (
                    "sample_size",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Tamaño de muestra recomendado",
                        null=True,
                        verbose_name="Tamaño de Muestra",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        help_text="Fecha planificada de inicio del programa",
                        verbose_name="Fecha de Inicio",
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        help_text="Fecha planificada de finalización del programa",
                        null=True,
                        verbose_name="Fecha de Finalización",
                    ),
                ),
                (
                    "next_execution_date",
                    models.DateField(
                        blank=True,
                        help_text="Fecha planificada de la próxima ejecución",
                        null=True,
                        verbose_name="Próxima Ejecución",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PLANNING", "En Planificación"),
                            ("ACTIVE", "Activo"),
                            ("PAUSED", "Pausado"),
                            ("COMPLETED", "Completado"),
                            ("CANCELLED", "Cancelado"),
                            ("ARCHIVED", "Archivado"),
                        ],
                        default="PLANNING",
                        help_text="Estado actual del programa",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "progress_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Porcentaje de completitud del programa",
                        max_digits=5,
                        verbose_name="Porcentaje de Progreso",
                    ),
                ),
                (
                    "alert_days_before",
                    models.PositiveIntegerField(
                        default=7,
                        help_text="Días antes de la ejecución para enviar alertas",
                        verbose_name="Días de Alerta Previa",
                    ),
                ),
                (
                    "requires_approval",
                    models.BooleanField(
                        default=True,
                        help_text="Indica si el programa requiere aprobación antes de ejecutar",
                        verbose_name="Requiere Aprobación",
                    ),
                ),
                (
                    "reporting_template",
                    models.JSONField(
                        default=dict,
                        help_text="Plantilla para generar reportes de auditoría",
                        verbose_name="Plantilla de Reportes",
                    ),
                ),
                (
                    "deliverables",
                    models.JSONField(
                        default=list,
                        help_text="Lista de entregables esperados del programa",
                        verbose_name="Entregables",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de Actualización"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="audit_programs_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creado por",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organización propietaria del programa",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organization.healthorganization",
                        verbose_name="Organización",
                    ),
                ),
                (
                    "program_leader",
                    models.ForeignKey(
                        help_text="Responsable principal del programa de auditoría",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="audit_programs_led",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Líder del Programa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Programa de Auditoría",
                "verbose_name_plural": "Programas de Auditoría",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AuditProgramMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("LEAD_AUDITOR", "Auditor Líder"),
                            ("AUDITOR", "Auditor"),
                            ("TECHNICAL_EXPERT", "Experto Técnico"),
                            ("OBSERVER", "Observador"),
                            ("COORDINATOR", "Coordinador"),
                            ("QUALITY_MANAGER", "Gestor de Calidad"),
                        ],
                        help_text="Rol del usuario en el programa de auditoría",
                        max_length=20,
                        verbose_name="Rol",
                    ),
                ),
                (
                    "responsibilities",
                    models.TextField(
                        blank=True,
                        help_text="Responsabilidades específicas del usuario en el programa",
                        verbose_name="Responsabilidades",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        help_text="Fecha de inicio de participación en el programa",
                        verbose_name="Fecha de Inicio",
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        help_text="Fecha de finalización de participación (opcional)",
                        null=True,
                        verbose_name="Fecha de Finalización",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indica si la membresía está actualmente activa",
                        verbose_name="Activo",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "assigned_by",
                    models.ForeignKey(
                        help_text="Usuario que asignó esta membresía",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="audit_memberships_assigned",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Asignado por",
                    ),
                ),
                (
                    "audit_program",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sogcs.auditprogram",
                        verbose_name="Programa de Auditoría",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuario",
                    ),
                ),
            ],
            options={
                "verbose_name": "Membresía de Programa de Auditoría",
                "verbose_name_plural": "Membresías de Programas de Auditoría",
            },
        ),
        migrations.AddField(
            model_name="auditprogram",
            name="audit_team",
            field=models.ManyToManyField(
                help_text="Miembros del equipo auditor",
                related_name="audit_programs_member",
                through="sogcs.AuditProgramMembership",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Equipo Auditor",
            ),
        ),
        migrations.CreateModel(
            name="QualityStandard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Código único del estándar (ej: SUH-001, PAMEC-002)",
                        max_length=50,
                        unique=True,
                        verbose_name="Código",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nombre descriptivo del estándar",
                        max_length=200,
                        verbose_name="Nombre",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Descripción detallada del estándar",
                        verbose_name="Descripción",
                    ),
                ),
                (
                    "standard_type",
                    models.CharField(
                        choices=[
                            ("SUH", "Sistema Único de Habilitación"),
                            ("PAMEC", "Programa de Auditoría para Mejoramiento"),
                            ("SIC", "Sistema de Información para la Calidad"),
                            ("SUA", "Sistema Único de Acreditación"),
                            ("ISO", "ISO 9001:2015"),
                            ("JCI", "Joint Commission International"),
                            ("ICONTEC", "ICONTEC - Normas Técnicas Colombianas"),
                        ],
                        help_text="Tipo de estándar según componente SOGCS",
                        max_length=20,
                        verbose_name="Tipo de Estándar",
                    ),
                ),
                (
                    "scope",
                    models.CharField(
                        choices=[
                            ("INSTITUTIONAL", "Institucional"),
                            ("SERVICE", "Por Servicio"),
                            ("PROCESS", "Por Proceso"),
                            ("DEPARTMENT", "Por Departamento"),
                            ("TRANSVERSAL", "Transversal"),
                        ],
                        help_text="Alcance de aplicación del estándar",
                        max_length=20,
                        verbose_name="Alcance",
                    ),
                ),
                (
                    "regulatory_framework",
                    models.JSONField(
                        default=list,
                        help_text="Lista de normas, resoluciones y decretos que sustentan el estándar",
                        verbose_name="Marco Normativo",
                    ),
                ),
                (
                    "criteria",
                    models.JSONField(
                        default=list,
                        help_text="Lista de criterios de evaluación del estándar",
                        verbose_name="Criterios",
                    ),
                ),
                (
                    "subcriteria",
                    models.JSONField(
                        default=list,
                        help_text="Subcriterios detallados por criterio principal",
                        verbose_name="Subcriterios",
                    ),
                ),
                (
                    "evidence_requirements",
                    models.JSONField(
                        default=list,
                        help_text="Lista de evidencias requeridas para demostrar cumplimiento",
                        verbose_name="Requerimientos de Evidencia",
                    ),
                ),
                (
                    "scoring_method",
                    models.CharField(
                        default="PERCENTAGE",
                        help_text="Método para calcular puntuación (PERCENTAGE, POINTS, BINARY)",
                        max_length=50,
                        verbose_name="Método de Puntuación",
                    ),
                ),
                (
                    "max_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("100.00"),
                        help_text="Puntuación máxima posible para este estándar",
                        max_digits=5,
                        verbose_name="Puntuación Máxima",
                    ),
                ),
                (
                    "min_compliance_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("80.00"),
                        help_text="Puntuación mínima requerida para considerar cumplimiento",
                        max_digits=5,
                        verbose_name="Puntuación Mínima de Cumplimiento",
                    ),
                ),
                (
                    "evaluation_frequency",
                    models.CharField(
                        default="ANNUAL",
                        help_text="Frecuencia recomendada de evaluación (MONTHLY, QUARTERLY, ANNUAL)",
                        max_length=20,
                        verbose_name="Frecuencia de Evaluación",
                    ),
                ),
                (
                    "requires_external_audit",
                    models.BooleanField(
                        default=False,
                        help_text="Indica si el estándar requiere validación por auditor externo",
                        verbose_name="Requiere Auditoría Externa",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Borrador"),
                            ("ACTIVE", "Activo"),
                            ("DEPRECATED", "Obsoleto"),
                            ("ARCHIVED", "Archivado"),
                        ],
                        default="DRAFT",
                        help_text="Estado actual del estándar",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "version",
                    models.CharField(
                        default="1.0.0",
                        help_text="Versión del estándar",
                        max_length=20,
                        verbose_name="Versión",
                    ),
                ),
                (
                    "effective_date",
                    models.DateField(
                        help_text="Fecha desde la cual es efectivo el estándar",
                        verbose_name="Fecha de Vigencia",
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        blank=True,
                        help_text="Fecha hasta la cual es válido el estándar",
                        null=True,
                        verbose_name="Fecha de Expiración",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de Actualización"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="quality_standards_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creado por",
                    ),
                ),
                (
                    "supersedes",
                    models.ForeignKey(
                        blank=True,
                        help_text="Estándar anterior que este reemplaza",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sogcs.qualitystandard",
                        verbose_name="Reemplaza a",
                    ),
                ),
            ],
            options={
                "verbose_name": "Estándar de Calidad",
                "verbose_name_plural": "Estándares de Calidad",
                "ordering": ["standard_type", "code"],
            },
        ),
        migrations.AddField(
            model_name="auditprogram",
            name="standards",
            field=models.ManyToManyField(
                blank=True,
                help_text="Estándares de calidad aplicables en este programa",
                to="sogcs.qualitystandard",
                verbose_name="Estándares",
            ),
        ),
        migrations.CreateModel(
            name="SOGCSConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nombre descriptivo para esta configuración SOGCS",
                        max_length=200,
                        verbose_name="Nombre de Configuración",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Descripción detallada de la configuración",
                        verbose_name="Descripción",
                    ),
                ),
                (
                    "version",
                    models.CharField(
                        default="1.0.0",
                        help_text="Versión de la configuración (formato semántico)",
                        max_length=20,
                        verbose_name="Versión",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=False,
                        help_text="Indica si esta configuración está actualmente activa",
                        verbose_name="Activa",
                    ),
                ),
                (
                    "activation_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Fecha y hora cuando se activó esta configuración",
                        null=True,
                        verbose_name="Fecha de Activación",
                    ),
                ),
                (
                    "suh_config",
                    models.JSONField(
                        default=dict,
                        help_text="Configuración específica para Sistema Único de Habilitación",
                        verbose_name="Configuración SUH",
                    ),
                ),
                (
                    "pamec_config",
                    models.JSONField(
                        default=dict,
                        help_text="Configuración para Programa de Auditoría para Mejoramiento de Calidad",
                        verbose_name="Configuración PAMEC",
                    ),
                ),
                (
                    "sic_config",
                    models.JSONField(
                        default=dict,
                        help_text="Configuración para Sistema de Información para la Calidad",
                        verbose_name="Configuración SIC",
                    ),
                ),
                (
                    "sua_config",
                    models.JSONField(
                        default=dict,
                        help_text="Configuración para Sistema Único de Acreditación",
                        verbose_name="Configuración SUA",
                    ),
                ),
                (
                    "notification_config",
                    models.JSONField(
                        default=dict,
                        help_text="Configuración de email, SMS, WhatsApp e in-app notifications",
                        verbose_name="Configuración de Notificaciones",
                    ),
                ),
                (
                    "escalation_config",
                    models.JSONField(
                        default=dict,
                        help_text="Configuración de escalamientos automáticos por niveles",
                        verbose_name="Configuración de Escalamientos",
                    ),
                ),
                (
                    "alert_config",
                    models.JSONField(
                        default=dict,
                        help_text="Umbrales y condiciones para alertas automáticas",
                        verbose_name="Configuración de Alertas",
                    ),
                ),
                (
                    "reporting_config",
                    models.JSONField(
                        default=dict,
                        help_text="Configuración de reportes automáticos y personalizados",
                        verbose_name="Configuración de Reportes",
                    ),
                ),
                (
                    "workflow_config",
                    models.JSONField(
                        default=dict,
                        help_text="Configuración de flujos de trabajo y aprobaciones",
                        verbose_name="Configuración de Workflows",
                    ),
                ),
                (
                    "integration_config",
                    models.JSONField(
                        default=dict,
                        help_text="Configuración de APIs gubernamentales (REPS, SISPRO, SIVIGILA)",
                        verbose_name="Configuración de Integración",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de Actualización"
                    ),
                ),
                (
                    "approval_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de Aprobación"
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Usuario que aprobó esta configuración",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sogcs_configs_approved",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Aprobado por",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="Usuario que creó esta configuración",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sogcs_configs_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creado por",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organización de salud propietaria de esta configuración",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organization.healthorganization",
                        verbose_name="Organización",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuración SOGCS",
                "verbose_name_plural": "Configuraciones SOGCS",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="auditprogrammembership",
            index=models.Index(
                fields=["audit_program", "is_active"],
                name="sogcs_audit_audit_p_7b40ac_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="auditprogrammembership",
            index=models.Index(
                fields=["user", "is_active"], name="sogcs_audit_user_id_db12ff_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="auditprogrammembership",
            index=models.Index(
                fields=["start_date", "end_date"], name="sogcs_audit_start_d_a4ac0b_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="auditprogrammembership",
            unique_together={("audit_program", "user", "role")},
        ),
        migrations.AddIndex(
            model_name="qualitystandard",
            index=models.Index(
                fields=["standard_type", "status"],
                name="sogcs_quali_standar_a62937_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="qualitystandard",
            index=models.Index(fields=["scope"], name="sogcs_quali_scope_1fd841_idx"),
        ),
        migrations.AddIndex(
            model_name="qualitystandard",
            index=models.Index(
                fields=["effective_date", "expiration_date"],
                name="sogcs_quali_effecti_f715c6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="auditprogram",
            index=models.Index(
                fields=["organization", "status"], name="sogcs_audit_organiz_6a2bf6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="auditprogram",
            index=models.Index(
                fields=["program_type", "frequency"],
                name="sogcs_audit_program_b3be64_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="auditprogram",
            index=models.Index(
                fields=["next_execution_date"], name="sogcs_audit_next_ex_4c9ca1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="auditprogram",
            index=models.Index(
                fields=["start_date", "end_date"], name="sogcs_audit_start_d_a3938c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="sogcsconfiguration",
            index=models.Index(
                fields=["organization", "is_active"],
                name="sogcs_sogcs_organiz_3c1716_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="sogcsconfiguration",
            index=models.Index(
                fields=["version"], name="sogcs_sogcs_version_1fefb5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="sogcsconfiguration",
            index=models.Index(
                fields=["activation_date"], name="sogcs_sogcs_activat_342568_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="sogcsconfiguration",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_active", True)),
                fields=("organization",),
                name="unique_active_sogcs_config_per_org",
            ),
        ),
    ]
