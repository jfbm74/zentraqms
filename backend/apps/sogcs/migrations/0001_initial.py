# Generated by Django 5.0 on 2025-08-18 01:31

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("organization", "0010_alter_organization_email_contacto"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="HeadquarterLocation",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated.",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the record.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Nombre de la sede"),
                ),
                ("address", models.TextField(verbose_name="Dirección")),
                ("city", models.CharField(max_length=100, verbose_name="Ciudad")),
                (
                    "department",
                    models.CharField(max_length=100, verbose_name="Departamento"),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Teléfono"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="headquarter_locations",
                        to="organization.organization",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last updated this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ubicación de Sede",
                "verbose_name_plural": "Ubicaciones de Sedes",
            },
        ),
        migrations.CreateModel(
            name="EnabledHealthService",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created.",
                        verbose_name="created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated.",
                        verbose_name="updated at",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the record.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "service_code",
                    models.CharField(max_length=10, verbose_name="Código del servicio"),
                ),
                (
                    "service_name",
                    models.CharField(
                        max_length=200, verbose_name="Nombre del servicio"
                    ),
                ),
                (
                    "complexity_level",
                    models.CharField(
                        choices=[
                            ("BAJA", "Baja complejidad"),
                            ("MEDIA", "Media complejidad"),
                            ("ALTA", "Alta complejidad"),
                        ],
                        default="BAJA",
                        max_length=20,
                        verbose_name="Nivel de complejidad",
                    ),
                ),
                (
                    "enabled_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de habilitación"
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de vencimiento"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enabled_services",
                        to="organization.organization",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last updated this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="updated by",
                    ),
                ),
                (
                    "headquarters",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="services",
                        to="sogcs.headquarterlocation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Servicio de Salud Habilitado",
                "verbose_name_plural": "Servicios de Salud Habilitados",
                "unique_together": {("organization", "headquarters", "service_code")},
            },
        ),
    ]
