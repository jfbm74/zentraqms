# Generated by Django 5.0 on 2025-08-17 06:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('organization', '0009_healthorganization_alertas_activas_and_more'),
        ('sogcs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HeadquarterLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_sede', models.CharField(help_text='Código único de identificación de la sede en REPS', max_length=50, unique=True, verbose_name='Código de Sede')),
                ('nombre_sede', models.CharField(help_text='Denominación oficial de la sede', max_length=200, verbose_name='Nombre de la Sede')),
                ('tipo_sede', models.CharField(help_text='Clasificación del tipo de sede según REPS', max_length=50, verbose_name='Tipo de Sede')),
                ('estado_sede', models.CharField(choices=[('ACTIVA', 'Activa'), ('SUSPENDIDA', 'Suspendida'), ('CANCELADA', 'Cancelada'), ('CERRADA', 'Cerrada')], default='ACTIVA', help_text='Estado actual de la sede en REPS', max_length=20, verbose_name='Estado de la Sede')),
                ('departamento', models.CharField(help_text='Departamento donde está ubicada la sede', max_length=100, verbose_name='Departamento')),
                ('codigo_departamento', models.CharField(help_text='Código DIVIPOLA del departamento', max_length=5, verbose_name='Código Departamento')),
                ('municipio', models.CharField(help_text='Municipio donde está ubicada la sede', max_length=100, verbose_name='Municipio')),
                ('codigo_municipio', models.CharField(help_text='Código DIVIPOLA del municipio', max_length=10, verbose_name='Código Municipio')),
                ('direccion', models.TextField(help_text='Dirección completa de la sede', verbose_name='Dirección')),
                ('telefono', models.CharField(blank=True, help_text='Número telefónico de la sede', max_length=50, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, help_text='Correo electrónico de contacto', max_length=254, verbose_name='Email')),
                ('representante_legal', models.CharField(blank=True, help_text='Nombre del representante legal de la sede', max_length=200, verbose_name='Representante Legal')),
                ('director_sede', models.CharField(blank=True, help_text='Nombre del director o responsable de la sede', max_length=200, verbose_name='Director de Sede')),
                ('fecha_apertura', models.DateField(blank=True, help_text='Fecha de apertura de la sede', null=True, verbose_name='Fecha de Apertura')),
                ('fecha_habilitacion', models.DateField(blank=True, help_text='Fecha de habilitación en REPS', null=True, verbose_name='Fecha de Habilitación')),
                ('fecha_vencimiento', models.DateField(blank=True, help_text='Fecha de vencimiento de la habilitación', null=True, verbose_name='Fecha de Vencimiento')),
                ('nivel_atencion', models.CharField(choices=[('NIVEL_I', 'Nivel I'), ('NIVEL_II', 'Nivel II'), ('NIVEL_III', 'Nivel III'), ('ESPECIALIZADO', 'Especializado')], help_text='Nivel de complejidad de atención', max_length=20, verbose_name='Nivel de Atención')),
                ('categoria', models.CharField(help_text='Categoría de la sede según clasificación MinSalud', max_length=50, verbose_name='Categoría')),
                ('numero_camas', models.PositiveIntegerField(default=0, help_text='Cantidad total de camas disponibles', verbose_name='Número de Camas')),
                ('fecha_actualizacion_reps', models.DateTimeField(blank=True, help_text='Última fecha de actualización en el portal REPS', null=True, verbose_name='Fecha Actualización REPS')),
                ('version_reps', models.CharField(blank=True, help_text='Versión del registro en REPS', max_length=20, verbose_name='Versión REPS')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='headquarters_created', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('organization', models.ForeignKey(help_text='Organización de salud propietaria de esta sede', on_delete=django.db.models.deletion.CASCADE, to='organization.healthorganization', verbose_name='Organización')),
            ],
            options={
                'verbose_name': 'Sede de Prestador',
                'verbose_name_plural': 'Sedes de Prestadores',
                'ordering': ['nombre_sede'],
            },
        ),
        migrations.CreateModel(
            name='EnabledHealthService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_servicio', models.CharField(help_text='Código único del servicio según REPS', max_length=50, verbose_name='Código de Servicio')),
                ('nombre_servicio', models.CharField(help_text='Denominación oficial del servicio', max_length=200, verbose_name='Nombre del Servicio')),
                ('tipo_servicio', models.CharField(help_text='Clasificación del tipo de servicio según REPS', max_length=100, verbose_name='Tipo de Servicio')),
                ('modalidad', models.CharField(help_text='Modalidad de prestación del servicio', max_length=50, verbose_name='Modalidad')),
                ('estado', models.CharField(choices=[('HABILITADO', 'Habilitado'), ('SUSPENDIDO', 'Suspendido'), ('CANCELADO', 'Cancelado'), ('VENCIDO', 'Vencido')], default='HABILITADO', help_text='Estado actual del servicio en REPS', max_length=20, verbose_name='Estado del Servicio')),
                ('grupo_servicio', models.CharField(help_text='Grupo al que pertenece el servicio', max_length=100, verbose_name='Grupo de Servicio')),
                ('subgrupo_servicio', models.CharField(blank=True, help_text='Subgrupo específico del servicio', max_length=100, verbose_name='Subgrupo de Servicio')),
                ('especialidad', models.CharField(blank=True, help_text='Especialidad médica asociada', max_length=100, verbose_name='Especialidad')),
                ('capacidad_instalada', models.PositiveIntegerField(default=0, help_text='Capacidad máxima de atención', verbose_name='Capacidad Instalada')),
                ('capacidad_utilizada', models.PositiveIntegerField(default=0, help_text='Capacidad actualmente en uso', verbose_name='Capacidad Utilizada')),
                ('numero_profesionales', models.PositiveIntegerField(default=0, help_text='Cantidad de profesionales asignados', verbose_name='Número de Profesionales')),
                ('complejidad', models.CharField(choices=[('BAJA', 'Baja Complejidad'), ('MEDIA', 'Mediana Complejidad'), ('ALTA', 'Alta Complejidad')], help_text='Nivel de complejidad del servicio', max_length=20, verbose_name='Complejidad')),
                ('ambito', models.CharField(choices=[('AMBULATORIO', 'Ambulatorio'), ('HOSPITALARIO', 'Hospitalario'), ('DOMICILIARIO', 'Domiciliario'), ('URGENCIAS', 'Urgencias')], help_text='Ámbito de prestación del servicio', max_length=50, verbose_name='Ámbito')),
                ('fecha_habilitacion', models.DateField(help_text='Fecha de habilitación del servicio', verbose_name='Fecha de Habilitación')),
                ('fecha_vencimiento', models.DateField(blank=True, help_text='Fecha de vencimiento de la habilitación', null=True, verbose_name='Fecha de Vencimiento')),
                ('fecha_ultima_actualizacion', models.DateField(blank=True, help_text='Fecha de última actualización en REPS', null=True, verbose_name='Fecha Última Actualización')),
                ('responsable_servicio', models.CharField(blank=True, help_text='Nombre del responsable del servicio', max_length=200, verbose_name='Responsable del Servicio')),
                ('telefono_servicio', models.CharField(blank=True, help_text='Teléfono específico del servicio', max_length=50, verbose_name='Teléfono del Servicio')),
                ('requiere_autorizacion', models.BooleanField(default=False, help_text='Indica si el servicio requiere autorización previa', verbose_name='Requiere Autorización')),
                ('atiende_urgencias', models.BooleanField(default=False, help_text='Indica si el servicio atiende urgencias', verbose_name='Atiende Urgencias')),
                ('disponible_24h', models.BooleanField(default=False, help_text='Indica si el servicio está disponible 24 horas', verbose_name='Disponible 24 Horas')),
                ('numero_resolucion', models.CharField(blank=True, help_text='Número de resolución de habilitación', max_length=100, verbose_name='Número de Resolución')),
                ('fecha_resolucion', models.DateField(blank=True, help_text='Fecha de la resolución de habilitación', null=True, verbose_name='Fecha de Resolución')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='services_created', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('headquarters', models.ForeignKey(help_text='Sede donde se presta el servicio', on_delete=django.db.models.deletion.CASCADE, related_name='enabled_services', to='sogcs.headquarterlocation', verbose_name='Sede')),
            ],
            options={
                'verbose_name': 'Servicio Habilitado',
                'verbose_name_plural': 'Servicios Habilitados',
                'ordering': ['nombre_servicio'],
            },
        ),
        migrations.AddIndex(
            model_name='headquarterlocation',
            index=models.Index(fields=['codigo_sede'], name='sogcs_headq_codigo__08a86c_idx'),
        ),
        migrations.AddIndex(
            model_name='headquarterlocation',
            index=models.Index(fields=['organization', 'estado_sede'], name='sogcs_headq_organiz_d16cc2_idx'),
        ),
        migrations.AddIndex(
            model_name='headquarterlocation',
            index=models.Index(fields=['departamento', 'municipio'], name='sogcs_headq_departa_99f70b_idx'),
        ),
        migrations.AddIndex(
            model_name='headquarterlocation',
            index=models.Index(fields=['fecha_vencimiento'], name='sogcs_headq_fecha_v_5ffd18_idx'),
        ),
        migrations.AddIndex(
            model_name='enabledhealthservice',
            index=models.Index(fields=['codigo_servicio'], name='sogcs_enabl_codigo__abaa39_idx'),
        ),
        migrations.AddIndex(
            model_name='enabledhealthservice',
            index=models.Index(fields=['headquarters', 'estado'], name='sogcs_enabl_headqua_6feabf_idx'),
        ),
        migrations.AddIndex(
            model_name='enabledhealthservice',
            index=models.Index(fields=['tipo_servicio', 'complejidad'], name='sogcs_enabl_tipo_se_11561d_idx'),
        ),
        migrations.AddIndex(
            model_name='enabledhealthservice',
            index=models.Index(fields=['fecha_vencimiento'], name='sogcs_enabl_fecha_v_b7d6b3_idx'),
        ),
        migrations.AddIndex(
            model_name='enabledhealthservice',
            index=models.Index(fields=['grupo_servicio'], name='sogcs_enabl_grupo_s_32d23f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='enabledhealthservice',
            unique_together={('headquarters', 'codigo_servicio')},
        ),
    ]